// <auto-generated />
using System;
using FoodOrderAppSF11_16.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodOrderAppSF11_16.Migrations
{
    [DbContext(typeof(FoodOrderDataContext))]
    [Migration("20220520132224_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DailyMenuDish", b =>
                {
                    b.Property<int>("DailyMenusID")
                        .HasColumnType("int");

                    b.Property<int>("DishesID")
                        .HasColumnType("int");

                    b.HasKey("DailyMenusID", "DishesID");

                    b.HasIndex("DishesID");

                    b.ToTable("DailyMenuDish");
                });

            modelBuilder.Entity("DishOrder", b =>
                {
                    b.Property<int>("DishesID")
                        .HasColumnType("int");

                    b.Property<int>("OrdersID")
                        .HasColumnType("int");

                    b.HasKey("DishesID", "OrdersID");

                    b.HasIndex("OrdersID");

                    b.ToTable("DishOrder");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.DailyMenu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("WeeklyMenuID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WeeklyMenuID");

                    b.ToTable("DailyMenus");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.Dish", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("DishType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DailyMenuID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("StoreID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DailyMenuID");

                    b.HasIndex("StoreID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsChosenOne")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.WeeklyMenu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StoreID");

                    b.ToTable("WeeklyMenus");
                });

            modelBuilder.Entity("DailyMenuDish", b =>
                {
                    b.HasOne("FoodOrderAppSF11_16.Model.DailyMenu", null)
                        .WithMany()
                        .HasForeignKey("DailyMenusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodOrderAppSF11_16.Model.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DishOrder", b =>
                {
                    b.HasOne("FoodOrderAppSF11_16.Model.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodOrderAppSF11_16.Model.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.DailyMenu", b =>
                {
                    b.HasOne("FoodOrderAppSF11_16.Model.WeeklyMenu", "WeeklyMenu")
                        .WithMany("DailyMenus")
                        .HasForeignKey("WeeklyMenuID");

                    b.Navigation("WeeklyMenu");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.Order", b =>
                {
                    b.HasOne("FoodOrderAppSF11_16.Model.DailyMenu", "DailyMenu")
                        .WithMany("Orders")
                        .HasForeignKey("DailyMenuID");

                    b.HasOne("FoodOrderAppSF11_16.Model.Store", "Store")
                        .WithMany("Order")
                        .HasForeignKey("StoreID");

                    b.HasOne("FoodOrderAppSF11_16.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID");

                    b.Navigation("DailyMenu");

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.WeeklyMenu", b =>
                {
                    b.HasOne("FoodOrderAppSF11_16.Model.Store", "Store")
                        .WithMany("WeeklyMenus")
                        .HasForeignKey("StoreID");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.DailyMenu", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.Store", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("WeeklyMenus");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodOrderAppSF11_16.Model.WeeklyMenu", b =>
                {
                    b.Navigation("DailyMenus");
                });
#pragma warning restore 612, 618
        }
    }
}
